swagger: '2.0'
info:
  version: '1.0'
  description: '<p>The component is based in td-idf numerical statistic. The aim of the API is to calculate the similarity score between multiple pairs of requirements.</p><p>There are five main methods: </p><ul><li><strong>AddReqs</strong>: Generates a model with the input requirements</li><li><strong>ReqReq</strong>: Compares two requirements</li><li><strong>ReqProject</strong>: Compares between a list of requirements and a set of requirements</li><li><strong>Project</strong>: Compares all possible pairs of requirements from a set of requirements</li><li><strong>AddReqsAndCompute</strong>: Is a mixture between AddReqs and Project methods</li></ul><p>And two auxiliary operations: </p><ul><li><strong>GetResponse</strong>: Returns in patches the resulting dependencies of the other methods</li><li><strong>DeleteOrganizationResponses</strong>: Deletes the organization responses from the database</li></ul><p>The component needs to preprocess the requirements before doing any comparison. The operation AddReqs is responsible for that work.</p><p>The operations AddReqs, ReqProject, Project and AddReqsAndCompute are asynchronous. It is necessary to write a server URL as parameter in all of them. The outcome of the operation will be returned to that url. All these operations follow the same pattern:</p><ol><li>The client calls the operation with all necessary parameters</li><li>The service receives the request and checks the main conditions</li><li>The service returns if the client request has been accepted or not and closes the connection<ul><li>(httpStatus!=200) The request has not been accepted. The message body contains the exception cause.</li><li>(httpStatus==200) The request has been accepted. The similarity calculation runs in the background. The message body contains the request identifier i.e. <em>{"id": "1548924677975_523"}</em></li></ul><li>When the calculation finishes (only if the request has been accepted) the service opens a connection with the server url specified as parameter. It sends a Json object that contains the outcome of the computation:<br><ul><li>(success) Example: {"code": 200,"id": "1557395889689_587","operation": "AddReqs"}.</li><li>(!success) Example: {"code": 400,"id": "1557396039530_583","error": "Bad request","message": "The requirement with id QM-3 is already inside the project","operation": "ReqProject"}.</li><li>The resulting dependencies can be obtained via the GetResponse method.</li></ul></li></ol><p>The API uses UTF-8 charset. Also, it uses the OpenReq format for input JSONs (it is specified in the Models section).</p>'
  title: SIMILARITY DETECTION COMPONENT
  contact:
    name: UPC-GESSI (OPENReq)
    url: 'http://openreq.eu/'
  license:
    name: License
host: 'localhost:9404'
basePath: /
tags:
  - name: Similarity detection Service
    description: API related to similarity detection
  - name: rest-api-controller
    description: Rest Api Controller
paths:
  /upc/similarity-detection/AddReqs:
    post:
      tags:
        - Main methods
      summary: Builds a model with the input requirements
      description: 'Builds a model with the entry requirements. The generated model is assigned to the specified organization and stored in an internal database. Each organization only can have one model at a time. If at the time of generating a new model the corresponding organization already has an existing model, it is replaced by the new one.'
      operationId: buildModelUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: compare
          in: query
          description: Use text attribute?
          required: false
          type: boolean
          allowEmptyValue: false
          x-example: true
        - in: body
          name: input
          description: OpenReqJson with requirements
          required: true
          schema:
            $ref: '#/definitions/Requirements'
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: url
          in: query
          description: The url where the result of the operation will be returned
          required: true
          type: string
          allowEmptyValue: false
          x-example: 'http://localhost:9406/upload/PostResult'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad request
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/AddReqsAndCompute:
    post:
      tags:
        - Main methods
      summary: Builds a model with the input requirements and computes them
      description: '<p>Builds a model with the entry requirements. The generated model is assigned to the specified organization and stored in an internal database. Each organization only can have one model at a time. If at the time of generating a new model the corresponding organization already has an existing model, it is replaced by the new one.</p><br><p>Also, it returns an array of dependencies between all possible pairs of  requirements from the requirements received as input.</p>'
      operationId: buildModelAndComputeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: compare
          in: query
          description: Use text attribute?
          required: false
          type: boolean
          allowEmptyValue: false
          x-example: true
        - in: body
          name: input
          description: OpenReqJson with requirements
          required: true
          schema:
            $ref: '#/definitions/Requirements'
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: threshold
          in: query
          description: Double between 0 and 1 that establishes the minimum similarity score that the added dependencies should have
          required: true
          type: number
          format: double
          allowEmptyValue: false
          x-example: 0.1
        - name: url
          in: query
          description: The url where the result of the operation will be returned
          required: true
          type: string
          allowEmptyValue: false
          x-example: 'http://localhost:9406/upload/PostResult'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad request
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/DeleteOrganizationResponses:
    delete:
      tags:
        - Auxiliary methods
      summary: Deletes the organization responses
      description: <p>Deletes the organization responses that are finished from the database.</p>
      operationId: deleteOrganizationResponsesUsingDELETE
      produces:
        - application/json
      parameters:
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not found
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/GetResponse:
    get:
      tags:
        - Auxiliary methods
      summary: Returns result dependencies of the other operations
      description: '<p>Returns the result json of the Project, ReqProject and AddReqsAndCompute methods. The result is a json object formed by a status attribute. If the status is 200 the json also contains an array of dependencies which are returned in patches of 20,000 . Each time this operation is called, the following 20,000 dependencies of the indicated response will be returned. An empty json will be returned when no more dependencies are left. Nevertheless, if the status attribute is not equal to 200, the json contains the exception message. </p>'
      operationId: getResponsePageUsingGET
      produces:
        - application/json
      parameters:
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: response
          in: query
          description: Response identifier
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not found
        '423':
          description: The computation is not finished yet
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/Project:
    post:
      tags:
        - Main methods
      summary: Similarity comparison between the requirements of one project
      description: <p>Returns an array of dependencies between all possible pairs of requirements from the project received as input. The similarity score is computed with the model assigned to the specified organization. All the requirements must be inside this model.</p>
      operationId: simProjectUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: input
          description: OpenReqJson with the project
          required: true
          schema:
            $ref: '#/definitions/JsonProject'
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: project
          in: query
          description: Id of the project to compare
          required: true
          type: string
          allowEmptyValue: false
          x-example: SQ
        - name: threshold
          in: query
          description: Double between 0 and 1 that establishes the minimum similarity score that the added dependencies should have
          required: true
          type: number
          format: double
          allowEmptyValue: false
          x-example: 0.1
        - name: url
          in: query
          description: The url where the result of the operation will be returned
          required: true
          type: string
          allowEmptyValue: false
          x-example: 'http://localhost:9406/upload/PostResult'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not found
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/ReqProject:
    post:
      tags:
        - Main methods
      summary: Similarity comparison between a list of requirements and all the requirements of a specific project
      description: <p>Returns an array of dependencies between the list of requirements and the project's requirements received as input. The similarity score is computed with the model assigned to the specified organization. All the requirements must be inside this model.</p>
      operationId: simReqProjectUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: input
          description: OpenReqJson with the project
          required: true
          schema:
            $ref: '#/definitions/JsonProject'
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: project
          in: query
          description: Id of the project to compare
          required: true
          type: string
          allowEmptyValue: false
          x-example: SM
        - name: req
          in: query
          description: Id of the requirements to compare
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - name: threshold
          in: query
          description: Double between 0 and 1 that establishes the minimum similarity score that the added dependencies should have
          required: true
          type: number
          format: double
          allowEmptyValue: false
          x-example: 0.1
        - name: url
          in: query
          description: The url where the result of the operation will be returned
          required: true
          type: string
          allowEmptyValue: false
          x-example: 'http://localhost:9406/upload/PostResult'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not found
        '500':
          description: Internal error
      deprecated: false
  /upc/similarity-detection/ReqReq:
    post:
      tags:
        - Main methods
      summary: Similarity comparison between two requirements
      description: Returns a dependency between the two input requirements. The similarity score is computed with the model assigned to the specified organization. The two requirements must be in this model.
      operationId: simReqReqUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: organization
          in: query
          description: Organization
          required: true
          type: string
          allowEmptyValue: false
          x-example: UPC
        - name: req1
          in: query
          description: Id of the first requirement to compare
          required: true
          type: string
          allowEmptyValue: false
          x-example: SQ-132
        - name: req2
          in: query
          description: Id of the second requirement to compare
          required: true
          type: string
          allowEmptyValue: false
          x-example: SQ-98
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not found
        '500':
          description: Internal error
      deprecated: false
definitions:
  JsonProject:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
    title: JsonProject
    description: OpenReqJson with projects
  Project:
    type: object
    properties:
      id:
        type: string
      specifiedRequirements:
        type: array
        items:
          type: string
    title: Project
    description: 'A project with id, name and requirements'
  Requirement:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      id:
        type: string
      name:
        type: string
      text:
        type: string
    title: Requirement
    description: A requirement with id and text
  Requirements:
    type: object
    properties:
      requirements:
        type: array
        items:
          $ref: '#/definitions/Requirement'
    title: Requirements
    description: OpenReqJson with requirements

